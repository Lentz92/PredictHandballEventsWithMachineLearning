---
title: "01-VSURF"
author: "Nicki lentz"
date: "`r Sys.Date()`"
output: html_document
editor_options: 
  chunk_output_type: console
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(
  echo = TRUE,
  fig.height = 10,
  fig.width = 25,
  message = FALSE,
  warning = FALSE
)

library(tidyverse)
library(tidymodels)
library(themis)
library(doSNOW)
library(VSURF)
library(caret)
trellis.par.set(caretTheme())

dfMappings <- data.table::fread("data/dfMappingsAllTags.csv") %>% 
  filter(Tag != "RESET") %>% 
  select(-c(OccID, index, Occurence, Timelength))

dfMappings_multiclass <- dfMappings %>% 
  mutate(Tag = factor(Tag, levels = c("Low Intensity","Dynamic","Running","Throw")),
         Subject = factor(Subject))
```

## Feature selection

Fore the feature selection all data was downsampled, as it otherwise would take more than
24 hours per iteration on a 4 ghz - 8 core cpu.

```{r}
selectedFeatures_rfe_multiclass <- list()
selectedFeatures_rfe_model_multiclass <- list()
j = 1

for (i in unique(dfMappings_multiclass$Subject)){
  
  start_time = Sys.time()
  print(glue::glue("Model {j} out of {length(unique(dfMappings_multiclass$Subject))}"))
  
  dfTrain <- dfMappings_multiclass %>%
    filter(Subject != i)
  
  dfDownsample <- recipe(Tag ~., data = dfTrain) %>% 
    step_downsample(Tag) %>% 
    prep() %>% 
    juice()
  
  y <- dfDownsample$Tag
  x <- dfDownsample %>% 
    select(!c("Subject", "Tag"))
  
  set.seed(123)
  ctrl <- rfeControl(functions = rfFuncs,
                     method = "repeatedcv",
                     repeats = 5,
                     number = 10,
                     verbose = FALSE,
                     allowParallel = TRUE
                     )
  
  cl <- parallel::makePSOCKcluster(6)
  doParallel::registerDoParallel(cl)
  
  randomForestProfile <- rfe(x, y,
                             sizes = seq(from=5,to=30,by=5),
                             rfeControl = ctrl)
  
  stopCluster(cl)
  registerDoSEQ()
  
  selectedFeatures_rfe_model_multiclass[[j]] <- randomForestProfile
  
  j = j + 1
  
  end_time = Sys.time()
  print(end_time - start_time)
  
}

save(selectedFeatures_rfe_model_multiclass, file = "../../data/processed/VSURF/rfe_model_multiclass.Rdata")

vsurf_selectedfeatures_multiclass <- list()
VSURFlist_multiclass <- list()
j = 1


for (i in unique(dfMappings_multiclass$Subject)){
  
  tictoc::tic("Total")
  print(paste("VSURF Modelling started for subjects No. ", i, sep=""))
  
  dfTrain <- dfMappings_multiclass %>%
    filter(Subject != i)
  
  dfTrainDownsample <- 
    recipe(formula = Tag ~., data = dfTrain) %>% 
    step_downsample(Tag) %>% 
    prep() %>% 
    juice()
  
  y <- dfTrainDownsample$Tag %>% 
    droplevels()
  x <- dfTrainDownsample %>% 
    select(!c("Subject", "Tag"))
  
  set.seed(456)
  # mtry = p / 3 basedRFE on Genuer 2010
  dfTrain.vsurf <- VSURF(x, y, parallel = TRUE, 
                         ncores = 6, clusterType = "PSOCK", ntree = 1000)
  
  dfTrain.vsurf.selected <- x %>% 
    select(dfTrain.vsurf$varselect.pred) %>% 
    colnames()
  
  vsurf_selectedfeatures_multiclass[[j]] <- dfTrain.vsurf.selected
  VSURFlist_multiclass[[j]] <- dfTrain.vsurf
  
  j = j + 1
  
  
  tictoc::toc()
  
}

save(vsurf_selectedfeatures_multiclass, file = "../../data/processed/VSURF/vsurf_selectedfeatures_multiclass.Rdata")
save(VSURFlist_multiclass, file = "data/VSURFlist_multiclass.Rdata")


#Concatenating the selected features from VSURF and RFE,
#while using unique() to remove dublicates.
selectedFeatures <- list()
for (i in 1:12){
  #Removing variables after 30, so we don't end up with 100+
  rfe_holder <- caret::predictors(selectedFeatures_rfe_model_multiclass[[i]])[1:30]
  #removing na values
  rfe_holder <- rfe_holder[!is.na(data)]
  #concatenating them
  selectedFeatures[[i]] <- unique(c(vsurf_selectedfeatures_multiclass[[i]], rfe_holder))
}

save(selectedFeatures, file = "../../data/processed/VSURF/combination_selectedfeatures_multiclass.Rdata")
```
